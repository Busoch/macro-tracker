# Generated by Django 5.2.5 on 2025-08-14 14:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('source_food_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('serving_size_g', models.FloatField(blank=True, help_text='Typical serving mass in grams if provided by source', null=True)),
                ('carbs_per_100g', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('protein_per_100g', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('fat_per_100g', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('calories_per_100g', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('last_synced', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['source', 'source_food_id'], name='nutrition_f_source_f4a643_idx'), models.Index(fields=['name'], name='nutrition_f_name_cad16d_idx')],
                'unique_together': {('source', 'source_food_id')},
            },
        ),
        migrations.CreateModel(
            name='DailySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('total_calories', models.FloatField(default=0.0)),
                ('total_carbs_g', models.FloatField(default=0.0)),
                ('total_protein_g', models.FloatField(default=0.0)),
                ('total_fat_g', models.FloatField(default=0.0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_summaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='FoodEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=255)),
                ('weight_g', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('carbs_g', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('protein_g', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('fat_g', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('calories', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('serving_description', models.CharField(blank=True, max_length=200)),
                ('source', models.CharField(blank=True, max_length=50)),
                ('source_food_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_entries', to=settings.AUTH_USER_MODEL)),
                ('food_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutrition.fooditem')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'date'], name='nutrition_f_user_id_bc7262_idx')],
            },
        ),
    ]
